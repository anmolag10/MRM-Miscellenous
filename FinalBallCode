
import cv2
import  numpy as np



minrad = 15
a1 = 0.85
a2 = 1.25
e1 = 0.85
e2 = 1.25

cap = cv2.VideoCapture(0)
cap.set(3,400)
cap.set(4,300)
while(True):
    z,frame = cap.read()
    if(z==True):
        HSV = cv2.cvtColor(frame,cv2.COLOR_BGR2HLS_FULL)
        g = cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)
        #thresh1 = np.array([28, 63, 44])
        #thresh2 = np.array([100, 255, 255])
        thresh1 = np.array([30, 60, 40])
        thresh2 = np.array([111, 255, 255])

        mask = cv2.inRange(HSV,thresh1,thresh2)

        kernel = np.ones((2,2),np.uint8)/4
        mask  = cv2.erode(mask,kernel,iterations=2)
        mask = cv2.dilate(mask,kernel,iterations=1)

        #mask = cv2.medianBlur(mask,5)
        k =1
        contours, hierarchy = cv2.findContours(mask, cv2.RETR_TREE, cv2.CHAIN_APPROX_TC89_L1)
        HSV1 = cv2.bitwise_and(frame,frame,mask=mask)

        for i in range(0,len(contours)):
            if len(contours)>1:
                (x,y),radius = cv2.minEnclosingCircle(contours[i])
                center = (int(x),int(y))
                radius = int(radius)
                x1, y1, w, h = cv2.boundingRect(contours[i])
                aspect_ratio = float(w) / h
                area1 = np.pi * radius * radius
                area2 = cv2.contourArea(contours[i])
                if(area1 != 0 and area2 != 0 ):
                    e = area1/area2
                else:
                    e = 0

            if(aspect_ratio > a1 and aspect_ratio < a2 and e>e1 and e < e2 and minrad<radius):
                frame = cv2.circle(frame,center,radius,(255,0,0),2)
                frame = cv2.putText(frame,"BALL DETECTED",(500,25),fontFace=cv2.FONT_HERSHEY_COMPLEX,fontScale=0.5,color=(0,0,255),thickness=2)

        else:
            pass

        cv2.imshow("detection",frame)
        cv2.imshow("mask", mask)

        if(cv2.waitKey(1) & 0xFF == 27):
            break
    else:
        break
cap.release()
cv2.destroyAllWindows()


